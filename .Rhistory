library(MInt)
mint::bootstrap
MInt::bootstrap
library(mintalt)
detach("package:mintalt", unload=TRUE)
detach("package:MInt", unload=TRUE)
install.packages("MInt")
library(mintalt)
matrix(, nrow=4, ncol=5)
matrix(NA, nrow=4, ncol=5)
sim_number= 1
helper_function_file = "~/research/code_library/mint_CC.R"
dir = "/mnt/GREENWOOD_SCRATCH/kevin.mcgregor/stan_multinom_normal/sim_study_data/n50_otu5_p3/sim_data"
output_dir = "/mnt/GREENWOOD_SCRATCH/kevin.mcgregor/stan_multinom_normal/sim_study_data/n50_otu5_p3/mint_est"
#lam = NULL
basename = "sim_rep"
fname = paste0(dir, "/", basename, sim_number, ".RData")
load(fname)
# Should we rarify first?
if (!is.na(rarefy) & rarefy) {
rare_counts = Rarefy(counts_cc)$otu.tab.rff
} else {
rare_counts = counts_cc
}
covars.df = data.frame(covars)
library(mintalt)
mintalt::mint_CC
library(mintalt)
mintalt::mint_CC
sim_number= 1
helper_function_file = "~/research/code_library/mint_CC.R"
dir = "/mnt/GREENWOOD_SCRATCH/kevin.mcgregor/stan_multinom_normal/sim_study_data/n50_otu5_p3/sim_data"
output_dir = "/mnt/GREENWOOD_SCRATCH/kevin.mcgregor/stan_multinom_normal/sim_study_data/n50_otu5_p3/mint_est"
#
basename = "sim_rep"
fname = paste0(dir, "/", basename, sim_number, ".RData")
load(fname)
if (!is.na(rarefy) & rarefy) {
rare_counts = Rarefy(counts_cc)$otu.tab.rff
} else {
rare_counts = counts_cc
}
covars.df = data.frame(covars)
# Running MInt on simulated data
library(GUniFrac)
if (!is.na(rarefy) & rarefy) {
rare_counts = Rarefy(counts_cc)$otu.tab.rff
} else {
rare_counts = counts_cc
}
fname = paste0(dir, "/", basename, sim_number, ".RData")
load(fname)
if (!is.na(rarefy) & rarefy) {
rare_counts = Rarefy(counts_cc)$otu.tab.rff
} else {
rare_counts = counts_cc
}
counts_cc
rarefy = TRUE
if (!is.na(rarefy) & rarefy) {
rare_counts = Rarefy(counts_cc)$otu.tab.rff
} else {
rare_counts = counts_cc
}
rare_counts
covars.df = data.frame(covars)
#Need to get rid of last column of counts_cc so the estimated matrix is the same as the multinom model
mint_est = mintalt::mint_CC(rare_counts[,-NCOL(counts_cc)], status, dir, covars.df[,-1], formula=~V3+V4,
multicore=TRUE, sim_number=sim_number, lambda=1)
mint_est[[1]]$optim$lambda
mint_est[[2]]$optim$lambda
#Need to get rid of last column of counts_cc so the estimated matrix is the same as the multinom model
mint_est = mintalt::mint_CC(rare_counts[,-NCOL(counts_cc)], status, dir, covars.df[,-1], formula=~V3+V4,
multicore=TRUE, sim_number=sim_number)
mint_est[[1]]$optim$lambda
mint_est[[2]]$optim$lambda
